// bitwise operators AND OR NOT
// TRUE && TRUE 0b0111 &
        //      0b1100 
        //   =  0b0100

// TRUE && FALSE 0b0111 /
        //       0b1100 
        //  =    0b1111

//1. 0b0010101 
//&  0b0110111 
//   0b0010101 == 21 
//console.log(0b0010101 & 0b0110111)

//2. 57 & 87
//   0b0111001 
// & 0b1010111
//   0b0010001 == 17
//console.log(0b0111001 & 0b1010111)

//3. 0b01101001
// & 0b00011000
//   0b00001000 == 8
//console.log(0b01101001 & 0b00011000)

//4. 0xBABE == 47776 & 0xBEEF (0x(11x16^3rd)(+14x16^2nd)+(14x16)+15)) == 45056+3584+224+15 == 48879
// 0b1000000000000000 0b10111110111011111
//console.log(0b1011101010100000)
//console.log(0b1011111011101111)
//  0b1011101010111110 & 
//  0b1011111011101111
//  0b1011101010101110
//console.log(0b1011101010101110) 
//console.log(0xBABE & 0xBEEF)
// 0xBABE = B-1011, A-1010, B-1011, E-1110
// 0xBEEF = B-1011, E-1110, E-1110, F-1111

//OR 1. 0b0010101 
// |    0b0110111
//      0B0110111

//.0R 2. 57
// 